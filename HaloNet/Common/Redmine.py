from traceback import print_exc

import aiohttp
import json

from Core import INFO_MSG, ERROR_MSG
from Core.ConfigSystem.Bases import ConfigGlobals


async def generate_bugreport(username, title, description, image):
    """
    Создаёт автоматический отчёт об ошибке в редмайне с картинкой и текстом

    @param username:
    @param title:
    @param description:
    @param image:
    @return:
    """

    redmine_config = ConfigGlobals.Redmine

    if not redmine_config:
        ERROR_MSG("redmine bugtracker not configured")
        return False

    redmine_host = redmine_config.get("host", None)
    if not redmine_host:
        ERROR_MSG("redmine host not configured")
        return False

    api_access_key = redmine_config.get("api_access_key", None)  # 'd41d39caf172705b8b63b290cec7c577b780cd11'
    if not api_access_key:
        ERROR_MSG("redmine api_access_key not configured")
        return False

    project_id = redmine_config.get("project_id", 1)

    async with aiohttp.ClientSession() as session:
        url = redmine_host + '/uploads.json'
        headers = {'content-type': 'application/octet-stream',
                   'X-Redmine-API-Key': api_access_key}
        token = ""
        result = await session.post(url, data=image, headers=headers)

        async with result as resp:
            try:
                response_json = await resp.json()
                INFO_MSG("Getting token")
                token = response_json.get("upload", {}).get("token", None)
            except Exception as e:
                print_exc()

        url = redmine_host + '/issues.json'

        data = f"""
                        <?xml version="1.0"?>
                        <issue>
                        <project_id>{project_id}</project_id>
                        <subject>[AUTO] {title}</subject>
                        <description>
h2. Баг от пользователя +{username}+

сгенерирован автоматически

h1. Проблема:

{description}
                        </description>
                        <priority_id>4</priority_id>
                        <category_id>1</category_id>

                        <uploads type="array">
                          <upload>
                            <token>{token}</token>
                            <filename>image.jpg</filename>
                            <description>Screenshot</description>
                            <content_type>image/jpeg</content_type>
                          </upload>
                        </uploads>

                        </issue>
                        """

        headers = {'content-type': 'application/xml',
                   'X-Redmine-API-Key': api_access_key}

        result = await session.post(url, data=data, headers=headers)

        async with result as resp:
            response_json = await resp.json()
            issue = response_json['issue']
            issue_id = issue['id']
            INFO_MSG(f"Bug report generated by {username} at {redmine_host}/issues/{issue_id}")


        return True